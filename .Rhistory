geom_bar(aes(x=as.factor(id), y=value, fill=Observation), stat="identity", alpha=0.5) +
scale_fill_manual(values = c("red", "blue")) +
#scale_fill_viridis(discrete=TRUE) +
# Add a val=100/75/50/25 lines. I do it at the beginning to make sur barplots are OVER it.
geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 5, xend = start, yend = 5), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 10, xend = start, yend = 10), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 15, xend = start, yend = 15), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 20, xend = start, yend = 20), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
# Add text showing the value of each 100/75/50/25 lines
ggplot2::annotate("text", x = rep(max(data$id),5), y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=4 , angle=0, fontface="bold", hjust=1) +
ylim(-25,max(label_data$tot, na.rm=T)+5) +
theme_minimal() +
theme(
#legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() +
# Add labels on top of each bar
geom_text(data=label_data, aes(x=id, y=tot+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.8, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
# Add base line information
geom_segment(data=base_data, aes(x = start, y = -1, xend = end, yend = -1), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
geom_text(data=base_data, aes(x = title, y = -3, label=group), hjust=c(0.7,1,0.3,0,0), vjust=c(1,0,-0.7,0,0.5), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
p
source('C:/Users/HElwy/Downloads/57357/desktop_scripts/biorepository/specimensDataCleaning.R', echo=TRUE)
source('C:/Users/HElwy/Downloads/57357/desktop_scripts/biorepository/specimensDataCleaning.R', echo=TRUE)
saveWorkbook(wb, file="openspecimenBlasts20191009.xlsx", overwrite = TRUE)
source('C:/Users/HElwy/Downloads/57357/desktop_scripts/biorepository/specimensDataCleaning.R', echo=TRUE)
library("dplyr")
library("tidyr")
library("pivottabler")
library("openxlsx")
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
x <- read.csv("../Downloads/QueryResults.csv")
x <- filter(x, Specimen_Specimen.Label != "")
y <- read.csv("../Downloads/CCHECancerRegistry-HassanSpreadsheet_DATA_LABELS_2019-10-03_0835.csv")
y <- y[c(1,3)]
colnames(y) <- c("Participant_MRN", "Diagnosis")
# y <- filter(y, Diagnosis != "")
y$Participant_MRN <- as.character(y$Participant_MRN)
x <- left_join(x,y)
z <- x
## INITIAL ONLY
# z <- filter(z, Visit_Event.Point == "0")
z <- filter(z, Specimen_Container.Name != "")
z <- filter(z, !grepl("test", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("check", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("error", tolower(Specimen_Container.Name)))
z$Diagnosis[grepl("_f" , tolower(z$Participant_MRN)) | grepl("_m" , tolower(z$Participant_MRN))] <- "Parent"
z[is.na(z)] <- ""
asd <- z[c("Participant_MRN", "Diagnosis")]
asd <- unique(asd)
write.csv(asd, "~/asdw.csv", row.names = F)
library("dplyr")
library("tidyr")
library("pivottabler")
library("openxlsx")
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
x <- read.csv("../Downloads/QueryResults.csv")
x <- filter(x, Specimen_Specimen.Label != "")
y <- read.csv("../Downloads/CCHECancerRegistry-HassanSpreadsheet_DATA_LABELS_2019-10-03_0835.csv")
y <- y[c(1,3)]
colnames(y) <- c("Participant_MRN", "Diagnosis")
# y <- filter(y, Diagnosis != "")
y$Participant_MRN <- as.character(y$Participant_MRN)
x <- left_join(x,y)
z <- x
## INITIAL ONLY
# z <- filter(z, Visit_Event.Point == "0")
z <- filter(z, Specimen_Container.Name != "")
z <- filter(z, !grepl("test", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("check", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("error", tolower(Specimen_Container.Name)))
z$Diagnosis[grepl("_f" , tolower(z$Participant_MRN)) | grepl("_m" , tolower(z$Participant_MRN))] <- "Parent"
z[is.na(z)] <- ""
asd <- z[c("Participant_MRN", "Diagnosis")]
asd <- unique(asd)
View(asd)
library("dplyr")
library("tidyr")
library("pivottabler")
library("openxlsx")
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
x <- read.csv("../Downloads/QueryResults.csv")
x <- filter(x, Specimen_Specimen.Label != "")
y <- read.csv("../Downloads/CCHECancerRegistry-HassanSpreadsheet_DATA_LABELS_2019-10-03_0835.csv")
y <- y[c(1,3)]
colnames(y) <- c("Participant_MRN", "Diagnosis")
# y <- filter(y, Diagnosis != "")
y$Participant_MRN <- as.character(y$Participant_MRN)
x <- left_join(x,y)
z <- x
## INITIAL ONLY
z <- filter(z, Visit_Event.Point == "0")
z <- filter(z, Specimen_Container.Name != "")
z <- filter(z, !grepl("test", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("check", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("error", tolower(Specimen_Container.Name)))
z$Diagnosis[grepl("_f" , tolower(z$Participant_MRN)) | grepl("_m" , tolower(z$Participant_MRN))] <- "Parent"
z[is.na(z)] <- ""
asd <- z[c("Participant_MRN", "Diagnosis")]
asd <- unique(asd)
write.csv(asd, "~/asdw.csv", row.names = F)
p <- ggplot(data) +
# Add the stacked bar
geom_bar(aes(x=as.factor(id), y=value, fill=Observation), stat="identity", alpha=0.5) +
scale_fill_manual(values = c("red", "blue")) +
#scale_fill_viridis(discrete=TRUE) +
# Add a val=100/75/50/25 lines. I do it at the beginning to make sur barplots are OVER it.
geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 5, xend = start, yend = 5), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 10, xend = start, yend = 10), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 15, xend = start, yend = 15), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 20, xend = start, yend = 20), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
# Add text showing the value of each 100/75/50/25 lines
ggplot2::annotate("text", x = rep(max(data$id),5), y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=4 , angle=0, fontface="bold", hjust=1) +
ylim(-25,max(label_data$tot, na.rm=T)+5) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() +
# Add labels on top of each bar
geom_text(data=label_data, aes(x=id, y=tot+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.8, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
# Add base line information
geom_segment(data=base_data, aes(x = start, y = -1, xend = end, yend = -1), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
geom_text(data=base_data, aes(x = title, y = -3, label=group), hjust=c(0.7,1,0.3,0,0), vjust=c(1,0,-0.7,0,0.5), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
p
source('C:/Users/HElwy/Desktop/xcz.R', echo=TRUE)
p <- ggplot(data) +
# Add the stacked bar
geom_bar(aes(x=as.factor(id), y=value, fill=Observation), stat="identity", alpha=0.5) +
scale_fill_manual(values = c("red", "blue")) +
#scale_fill_viridis(discrete=TRUE) +
# Add a val=100/75/50/25 lines. I do it at the beginning to make sur barplots are OVER it.
geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 5, xend = start, yend = 5), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 10, xend = start, yend = 10), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 15, xend = start, yend = 15), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 20, xend = start, yend = 20), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
# Add text showing the value of each 100/75/50/25 lines
ggplot2::annotate("text", x = rep(max(data$id),5), y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=4 , angle=0, fontface="bold", hjust=1) +
ylim(-25,max(label_data$tot, na.rm=T)+5) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() +
# Add labels on top of each bar
geom_text(data=label_data, aes(x=id, y=tot+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.8, size=7, angle= label_data$angle, inherit.aes = FALSE ) +
# Add base line information
geom_segment(data=base_data, aes(x = start, y = -1, xend = end, yend = -1), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
geom_text(data=base_data, aes(x = title, y = -3, label=group), hjust=c(0.7,1,0.3,0,0), vjust=c(1,0,-0.7,0,0.5), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
p
# Make the plot
p <- ggplot(data) +
# Add the stacked bar
geom_bar(aes(x=as.factor(id), y=value, fill=Observation), stat="identity", alpha=0.5) +
scale_fill_manual(values = c("red", "blue")) +
#scale_fill_viridis(discrete=TRUE) +
# Add a val=100/75/50/25 lines. I do it at the beginning to make sur barplots are OVER it.
geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 5, xend = start, yend = 5), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 10, xend = start, yend = 10), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 15, xend = start, yend = 15), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 20, xend = start, yend = 20), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
# Add text showing the value of each 100/75/50/25 lines
ggplot2::annotate("text", x = rep(max(data$id),5), y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=4 , angle=0, fontface="bold", hjust=1) +
ylim(-25,max(label_data$tot, na.rm=T)+5) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() +
# Add labels on top of each bar
geom_text(data=label_data, aes(x=id, y=tot+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.8, size=4, angle= label_data$angle, inherit.aes = FALSE ) +
# Add base line information
geom_segment(data=base_data, aes(x = start, y = -1, xend = end, yend = -1), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
geom_text(data=base_data, aes(x = title, y = -3, label=group), hjust=c(0.7,1,0.3,0,0), vjust=c(1,0,-0.7,0,0.5), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
p
p <- ggplot(data) +
# Add the stacked bar
geom_bar(aes(x=as.factor(id), y=value, fill=Observation), stat="identity", alpha=0.5) +
scale_fill_manual(values = c("red", "blue")) +
#scale_fill_viridis(discrete=TRUE) +
# Add a val=100/75/50/25 lines. I do it at the beginning to make sur barplots are OVER it.
geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 5, xend = start, yend = 5), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 10, xend = start, yend = 10), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 15, xend = start, yend = 15), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 20, xend = start, yend = 20), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
# Add text showing the value of each 100/75/50/25 lines
ggplot2::annotate("text", x = rep(max(data$id),5), y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=4 , angle=0, fontface="bold", hjust=1) +
ylim(-25,max(label_data$tot, na.rm=T)+5) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() +
# Add labels on top of each bar
geom_text(data=label_data, aes(x=id, y=tot+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.8, size=3, angle= label_data$angle, inherit.aes = FALSE ) +
# Add base line information
geom_segment(data=base_data, aes(x = start, y = -1, xend = end, yend = -1), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
geom_text(data=base_data, aes(x = title, y = -3, label=group), hjust=c(0.7,1,0.3,0,0), vjust=c(1,0,-0.7,0,0.5), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
p
# Make the plot
p <- ggplot(data) +
# Add the stacked bar
geom_bar(aes(x=as.factor(id), y=value, fill=Observation), stat="identity", alpha=0.5) +
scale_fill_manual(values = c("red", "blue")) +
#scale_fill_viridis(discrete=TRUE) +
# Add a val=100/75/50/25 lines. I do it at the beginning to make sur barplots are OVER it.
geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 5, xend = start, yend = 5), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 10, xend = start, yend = 10), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 15, xend = start, yend = 15), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 20, xend = start, yend = 20), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
# Add text showing the value of each 100/75/50/25 lines
ggplot2::annotate("text", x = rep(max(data$id),5), y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=4 , angle=0, fontface="bold", hjust=1) +
ylim(-25,max(label_data$tot, na.rm=T)+5) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() +
# Add labels on top of each bar
geom_text(data=label_data, aes(x=id, y=tot+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.8, size=5, angle= label_data$angle, inherit.aes = FALSE ) +
# Add base line information
geom_segment(data=base_data, aes(x = start, y = -1, xend = end, yend = -1), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
geom_text(data=base_data, aes(x = title, y = -3, label=group), hjust=c(0.7,1,0.3,0,0), vjust=c(1,0,-0.7,0,0.5), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
p
p <- ggplot(data) +
# Add the stacked bar
geom_bar(aes(x=as.factor(id), y=value, fill=Observation), stat="identity", alpha=0.5) +
scale_fill_manual(values = c("red", "blue")) +
#scale_fill_viridis(discrete=TRUE) +
# Add a val=100/75/50/25 lines. I do it at the beginning to make sur barplots are OVER it.
geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 5, xend = start, yend = 5), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 10, xend = start, yend = 10), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 15, xend = start, yend = 15), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 20, xend = start, yend = 20), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
# Add text showing the value of each 100/75/50/25 lines
ggplot2::annotate("text", x = rep(max(data$id),5), y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=4 , angle=0, fontface="bold", hjust=1) +
ylim(-25,max(label_data$tot, na.rm=T)+5) +
theme_minimal() +
theme(
legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() +
# Add labels on top of each bar
geom_text(data=label_data, aes(x=id, y=tot+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.8, size=5, angle= label_data$angle, inherit.aes = FALSE ) +
# Add base line information
geom_segment(data=base_data, aes(x = start, y = -1, xend = end, yend = -1), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
geom_text(data=base_data, aes(x = title, y = -3, label=group), hjust=c(0.7,1,0.3,0,0), vjust=c(1,0,-0.7,0,0.5), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
p
ggsave(p, file="output.tiff", width=11, height=8, dpi=900, compression = "lzw")
# Make the plot
p <- ggplot(data) +
# Add the stacked bar
geom_bar(aes(x=as.factor(id), y=value, fill=Observation), stat="identity", alpha=0.5) +
scale_fill_manual(values = c("red", "blue")) +
#scale_fill_viridis(discrete=TRUE) +
# Add a val=100/75/50/25 lines. I do it at the beginning to make sur barplots are OVER it.
geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 5, xend = start, yend = 5), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 10, xend = start, yend = 10), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 15, xend = start, yend = 15), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 20, xend = start, yend = 20), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
# Add text showing the value of each 100/75/50/25 lines
ggplot2::annotate("text", x = rep(max(data$id),5), y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=4 , angle=0, fontface="bold", hjust=1) +
ylim(-25,max(label_data$tot, na.rm=T)+5) +
theme_minimal() +
theme(
# legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() +
# Add labels on top of each bar
geom_text(data=label_data, aes(x=id, y=tot+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.8, size=5, angle= label_data$angle, inherit.aes = FALSE ) +
# Add base line information
geom_segment(data=base_data, aes(x = start, y = -1, xend = end, yend = -1), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
geom_text(data=base_data, aes(x = title, y = -3, label=group), hjust=c(0.7,1,0.3,0,0), vjust=c(1,0,-0.7,0,0.5), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
p
ggsave(p, file="output.tiff", width=11, height=8, dpi=900, compression = "lzw")
p <- ggplot(data) +
# Add the stacked bar
geom_bar(aes(x=as.factor(id), y=value, fill=Observation), stat="identity", alpha=0.5) +
scale_fill_manual(values = c("red", "blue")) +
#scale_fill_viridis(discrete=TRUE) +
# Add a val=100/75/50/25 lines. I do it at the beginning to make sur barplots are OVER it.
geom_segment(data=grid_data, aes(x = end, y = 0, xend = start, yend = 0), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 5, xend = start, yend = 5), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 10, xend = start, yend = 10), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 15, xend = start, yend = 15), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
geom_segment(data=grid_data, aes(x = end, y = 20, xend = start, yend = 20), colour = "grey", alpha=1, size=0.3 , inherit.aes = FALSE ) +
# Add text showing the value of each 100/75/50/25 lines
ggplot2::annotate("text", x = rep(max(data$id),5), y = c(0, 5, 10, 15, 20), label = c("0", "5", "10", "15", "20") , color="grey", size=4 , angle=0, fontface="bold", hjust=1) +
ylim(-25,max(label_data$tot, na.rm=T)+5) +
theme_minimal() +
theme(
# legend.position = "none",
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar() +
# Add labels on top of each bar
geom_text(data=label_data, aes(x=id, y=tot+3, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.8, size=4, angle= label_data$angle, inherit.aes = FALSE ) +
# Add base line information
geom_segment(data=base_data, aes(x = start, y = -1, xend = end, yend = -1), colour = "black", alpha=0.8, size=0.6 , inherit.aes = FALSE )  +
geom_text(data=base_data, aes(x = title, y = -3, label=group), hjust=c(0.7,1,0.3,0,0), vjust=c(1,0,-0.7,0,0.5), colour = "black", alpha=0.8, size=4, fontface="bold", inherit.aes = FALSE)
p
ggsave(p, file="output.tiff", width=11, height=8, dpi=900, compression = "lzw")
ggsave(p, file="output.tiff", width=11, height=11, dpi=900, compression = "lzw")
ggsave(p, file="output.tiff", width=11, height=10, dpi=900, compression = "lzw")
ggsave(p, file="output.tiff", width=12, height=10, dpi=900, compression = "lzw")
?geom_bar
tidyverse
?virdis
??viridis
?tidyverse
source('C:/Users/HElwy/Desktop/xcz.R', echo=TRUE)
ggsave(p, file="output.tiff", width=12, height=12, dpi=900, compression = "lzw")
source('C:/Users/HElwy/Downloads/57357/desktop_scripts/important/encounters_import.R', echo=TRUE)
source('C:/Users/HElwy/Downloads/57357/desktop_scripts/important/encounters_import.R', echo=TRUE)
postForm(
uri='https://redcap.57357.org/redcap/api/',
token='946849EABB42BAF152B93B0FBE67EA34',
content='record',
format='json',
type='flat',
overwriteBehavior='normal',
forceAutoNumber='false',
data=x,
dateFormat='DMY',
returnContent='count',
returnFormat='json'
)
x$admit[1]
source('C:/Users/HElwy/Downloads/57357/desktop_scripts/important/encounters_import.R', echo=TRUE)
source('C:/Users/HElwy/Downloads/57357/desktop_scripts/important/encounters_import.R', echo=TRUE)
source('C:/Users/HElwy/Downloads/57357/desktop_scripts/important/encounters_import.R', echo=TRUE)
source('C:/Users/HElwy/Downloads/57357/desktop_scripts/important/encounters_import.R', echo=TRUE)
source('C:/Users/HElwy/Downloads/57357/desktop_scripts/important/encounters_import.R', echo=TRUE)
library("dplyr")
library("tidyr")
library("pivottabler")
library("openxlsx")
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
x <- read.csv("../Downloads/QueryResults.csv")
x <- filter(x, Specimen_Specimen.Label != "")
y <- read.csv("../Downloads/CCHECancerRegistry-HassanSpreadsheet_DATA_LABELS_2019-10-03_0835.csv")
y <- y[c(1,3)]
colnames(y) <- c("Participant_MRN", "Diagnosis")
# y <- filter(y, Diagnosis != "")
y$Participant_MRN <- as.character(y$Participant_MRN)
x <- left_join(x,y)
z <- x
## INITIAL ONLY
z <- filter(z, Visit_Event.Point == "0")
z <- filter(z, Specimen_Container.Name != "")
z <- filter(z, !grepl("test", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("check", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("error", tolower(Specimen_Container.Name)))
z$Diagnosis[grepl("_f" , tolower(z$Participant_MRN)) | grepl("_m" , tolower(z$Participant_MRN))] <- "Parent"
z[is.na(z)] <- ""
asd <- z[c("Participant_MRN", "Diagnosis")]
asd <- unique(asd)
write.csv(asd, "~/asdw.csv", row.names = F)
library("dplyr")
library("tidyr")
library("pivottabler")
library("openxlsx")
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
x <- read.csv("../Downloads/QueryResults(2).csv")
x <- filter(x, Specimen_Specimen.Label != "")
y <- read.csv("../Downloads/CCHECancerRegistry-HassanSpreadsheet_DATA_LABELS_2019-10-03_0835.csv")
y <- y[c(1,3)]
colnames(y) <- c("Participant_MRN", "Diagnosis")
# y <- filter(y, Diagnosis != "")
y$Participant_MRN <- as.character(y$Participant_MRN)
x <- left_join(x,y)
z <- x
## INITIAL ONLY
z <- filter(z, Visit_Event.Point == "0")
z <- filter(z, Specimen_Container.Name != "")
z <- filter(z, !grepl("test", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("check", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("error", tolower(Specimen_Container.Name)))
z$Diagnosis[grepl("_f" , tolower(z$Participant_MRN)) | grepl("_m" , tolower(z$Participant_MRN))] <- "Parent"
z[is.na(z)] <- ""
asd <- z[c("Participant_MRN", "Diagnosis")]
asd <- unique(asd)
write.csv(asd, "~/asdw.csv", row.names = F)
library("dplyr")
library("tidyr")
library("pivottabler")
library("openxlsx")
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
x <- read.csv("../Downloads/QueryResults(2).csv")
x <- filter(x, Specimen_Specimen.Label != "")
y <- read.csv("../Downloads/CCHECancerRegistry-HassanSpreadsheet_DATA_LABELS_2019-10-03_0835.csv")
y <- y[c(1,3)]
colnames(y) <- c("Participant_MRN", "Diagnosis")
# y <- filter(y, Diagnosis != "")
y$Participant_MRN <- as.character(y$Participant_MRN)
x <- left_join(x,y)
z <- x
## INITIAL ONLY
# z <- filter(z, Visit_Event.Point == "0")
z <- filter(z, Specimen_Container.Name != "")
z <- filter(z, !grepl("test", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("check", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("error", tolower(Specimen_Container.Name)))
z$Diagnosis[grepl("_f" , tolower(z$Participant_MRN)) | grepl("_m" , tolower(z$Participant_MRN))] <- "Parent"
z[is.na(z)] <- ""
asd <- z[c("Participant_MRN", "Diagnosis")]
asd <- unique(asd)
write.csv(z, "~/asdw.csv", row.names = F)
library("dplyr")
library("tidyr")
library("pivottabler")
library("openxlsx")
rm(list=ls(all=TRUE))
options(stringsAsFactors = FALSE)
x <- read.csv("../Downloads/QueryResults(2).csv")
x <- filter(x, Specimen_Specimen.Label != "")
y <- read.csv("../Downloads/CCHECancerRegistry-HassanSpreadsheet_DATA_LABELS_2019-12-03_1040.csv")
y <- y[c(1,3)]
colnames(y) <- c("Participant_MRN", "Diagnosis")
# y <- filter(y, Diagnosis != "")
y$Participant_MRN <- as.character(y$Participant_MRN)
x <- left_join(x,y)
z <- x
## INITIAL ONLY
# z <- filter(z, Visit_Event.Point == "0")
z <- filter(z, Specimen_Container.Name != "")
z <- filter(z, !grepl("test", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("check", tolower(Specimen_Container.Name)))
z <- filter(z, !grepl("error", tolower(Specimen_Container.Name)))
z$Diagnosis[grepl("_f" , tolower(z$Participant_MRN)) | grepl("_m" , tolower(z$Participant_MRN))] <- "Parent"
z[is.na(z)] <- ""
asd <- z[c("Participant_MRN", "Diagnosis")]
asd <- unique(asd)
write.csv(z, "~/asdw.csv", row.names = F)
library(datasets)
data("airquality")
data(airquality)
View(airquality)
?data
setwd("../Developer/coursera/RepData_PeerAssessment1/")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.path = "instructions_fig/")
suppressMessages(library(dplyr))
suppressMessages(library(dplyr))
suppressMessages(library(lubridate))
unzip("activity.zip")
suppressMessages(library(lubridate))
unzip("activity.zip")
activity <- read.csv("activity.csv")
stepsPerDay <- activity %>% group_by(date) %>% summarise(steps = sum(steps, na.rm = TRUE))
grouped <- group_by(activity, date)
sum_steps <- aggregate(grouped$steps, by = list(activity$date) , FUN = sum, na.rm = T)
View(grouped)
View(activity)
View(grouped)
View(activity)
View(grouped)
View(sum_steps)
View(stepsPerDay)
hist(stepsPerDay$steps)
hist(stepsPerDay$steps, main = "", names.arg = "Steps")
hist(stepsPerDay$steps, main = "", xlab = "Steps")
hist(stepsPerDay$steps, main = "Total number of steps taken each day", xlab = "Steps")
